com.erwin.lineage.sync.metadata.system = SET nocount ON;IF Object_id('tempdb..#mid_tbl') IS NOT NULL DROP TABLE #mid_tbl;IF Object_id('tempdb..#result') IS NOT NULL DROP TABLE #result;DECLARE @sp_crsr CURSOR;CREATE TABLE #result ( SYS NVARCHAR(MAX), env NVARCHAR(MAX), tbl NVARCHAR(MAX), col NVARCHAR(MAX), xpath NVARCHAR(MAX), is_exist INT );CREATE TABLE #mid_tbl ( SYS NVARCHAR(MAX), env NVARCHAR(MAX), tbl NVARCHAR(MAX), col NVARCHAR(MAX), xpath NVARCHAR(MAX), fromtbl NVARCHAR(MAX), totable NVARCHAR(MAX) );DECLARE @sys NVARCHAR(MAX);DECLARE @env NVARCHAR(MAX);DECLARE @tbl NVARCHAR(MAX);DECLARE @col NVARCHAR(MAX);DECLARE @xpath NVARCHAR(MAX);DECLARE @s_crsr CURSOR;DECLARE @val NVARCHAR(MAX);DECLARE @prev_value NVARCHAR(MAX);DECLARE @current_value NVARCHAR(MAX);DECLARE @delimiter NVARCHAR(MAX) = '/';SET @sp_crsr = CURSOR FOR WITH metadata AS ( SELECT SD.SYSTEM_NAME FROM SYSTEM_DEFINITION_DETAILS SD WHERE SD.SYSTEM_ID IN ( SELECT value FROM dbo.Split( N',', ?)) )SELECT SRC_SYSTEM_NAME , src_system_environment_name, SRC_ENTITY_UID, src_column_name, src_xpath FROM APPENDED_MAP_SPEC_RECORDS (NOLOCK) WHERE Upper(SRC_SYSTEM_NAME) IN ( SELECT Upper(SYSTEM_NAME) FROM metadata) UNION SELECT tgt_SYSTEM_NAME, tgt_system_environment_name, TGT_ENTITY_UID, tgt_column_name, tgt_xpath FROM APPENDED_MAP_SPEC_RECORDS (NOLOCK) WHERE Upper(TGT_SYSTEM_NAME) IN ( SELECT Upper(SYSTEM_NAME) FROM metadata)OPEN @sp_crsr FETCH NEXT FROM @sp_crsr INTO @sys, @env, @tbl, @col, @xpath WHILE @@FETCH_STATUS = 0 BEGIN INSERT INTO #mid_tbl VALUES ( @sys, @env, @tbl, @col, @xpath, @tbl, @col ); IF (LEFT(@xpath, 1) = '$') BEGIN SET @delimiter = '.'; END; IF NOT EXISTS ( SELECT * FROM SYS_CON_ENVIRONMENTS WHERE SYSTEM_NAME = @sys AND SYSTEM_ENVIRONMENT_NAME = @env ) BEGIN INSERT INTO #result ( [sys], env, tbl, col, xpath, is_exist ) VALUES ( @sys, @env, @tbl, @col, @xpath, 0 ); END; IF @xpath <> '' BEGIN SET @s_crsr = CURSOR FOR SELECT VALUE FROM dbo.SPLIT(@delimiter, @xpath) OPEN @s_crsr FETCH NEXT FROM @s_crsr INTO @val; WHILE @@FETCH_STATUS = 0 BEGIN IF(@prev_value = NULL) SET @prev_value = @current_value; ELSE SET @prev_value = @current_value; SET @current_value = @val; IF(Charindex('@', @current_value) > 0) BEGIN SET @current_value = Substring(@current_value, 2, Len(@current_value)); END; INSERT INTO #mid_tbl VALUES ( @sys, @env, @tbl, @col, @xpath, @prev_value, @current_value ); FETCH NEXT FROM @s_crsr INTO @val; END; CLOSE @s_crsr ; DEALLOCATE @s_crsr; END; SET @prev_value = NULL; SET @current_value = NULL; SET @delimiter = '/'; FETCH NEXT FROM @sp_crsr INTO @sys, @env, @tbl, @col, @xpath END;CLOSE @sp_crsr ;DEALLOCATE @sp_crsr;INSERT INTO #result ( SYS, env, tbl, col, xpath, is_exist ) SELECT SYS, env, tbl, col, mt.xpath, CASE WHEN cte.table_name IS NOT NULL AND cte.column_name IS NOT NULL THEN 1 ELSE 0 END IS_EXIST FROM ACTIVE_SYS_CON_ENVIRONMENTS SCE JOIN valid_sys_tbl_col_metadata cte ON cte.system_id = SCE.system_id RIGHT JOIN #mid_tbl mt ON Upper(mt.sys) = Upper(sce.system_name) COLLATE DATABASE_DEFAULT AND Upper(mt.env) = Upper(sce.system_environment_name) COLLATE DATABASE_DEFAULT AND Upper(mt.fromtbl) = Upper(cte.table_name) COLLATE DATABASE_DEFAULT AND Upper(mt.totable) = Upper(cte.column_name) COLLATE DATABASE_DEFAULT WHERE mt.fromtbl <> '.' AND mt.totable <> '.' AND mt.fromtbl <> '$' AND mt.totable <> '$'SELECT SYS SYSTEM_NAME, env SYSTEM_ENV_NAME, tbl TABLE_NAME, col COLUMN_NAME, xpath XPATH, Min(IS_EXIST) IS_EXIST FROM #result GROUP BY SYS, env, tbl, col, xpath;
com.erwin.lineage.sync.metadata.environment = SET nocount ON;IF Object_id('tempdb..#mid_tbl') IS NOT NULL DROP TABLE #mid_tbl;IF Object_id('tempdb..#result') IS NOT NULL DROP TABLE #result;DECLARE @sp_crsr CURSOR;CREATE TABLE #result ( SYS NVARCHAR(MAX), env NVARCHAR(MAX), tbl NVARCHAR(MAX), col NVARCHAR(MAX), xpath NVARCHAR(MAX), is_exist INT );CREATE TABLE #mid_tbl ( SYS NVARCHAR(MAX), env NVARCHAR(MAX), tbl NVARCHAR(MAX), col NVARCHAR(MAX), xpath NVARCHAR(MAX), fromtbl NVARCHAR(MAX), totable NVARCHAR(MAX) );DECLARE @sys NVARCHAR(MAX);DECLARE @env NVARCHAR(MAX);DECLARE @tbl NVARCHAR(MAX);DECLARE @col NVARCHAR(MAX);DECLARE @xpath NVARCHAR(MAX);DECLARE @s_crsr CURSOR;DECLARE @val NVARCHAR(MAX);DECLARE @prev_value NVARCHAR(MAX);DECLARE @current_value NVARCHAR(MAX);DECLARE @delimiter NVARCHAR(MAX) = '/';SET @sp_crsr = CURSOR FOR WITH metadata AS ( SELECT SD.SYSTEM_NAME, SCE.SYSTEM_ENVIRONMENT_NAME FROM SYSTEM_DEFINITION_DETAILS SD JOIN ACTIVE_SYS_CON_ENVIRONMENTS SCE ON SD.SYSTEM_ID = SCE.SYSTEM_ID WHERE SCE.SCE_ID IN ( SELECT value FROM dbo.Split( N',', ?)) )SELECT SRC_SYSTEM_NAME , src_system_environment_name, SRC_ENTITY_UID, src_column_name, src_xpath FROM APPENDED_MAP_SPEC_RECORDS (NOLOCK) WHERE Upper(SRC_SYSTEM_NAME) IN ( SELECT Upper(SYSTEM_NAME) FROM metadata) AND Upper(SRC_SYSTEM_ENVIRONMENT_NAME) IN ( SELECT Upper(SYSTEM_ENVIRONMENT_NAME) FROM metadata) UNION SELECT tgt_SYSTEM_NAME, tgt_system_environment_name, TGT_ENTITY_UID, tgt_column_name, tgt_xpath FROM APPENDED_MAP_SPEC_RECORDS (NOLOCK) WHERE Upper(TGT_SYSTEM_NAME) IN ( SELECT Upper(SYSTEM_NAME) FROM metadata) AND Upper(TGT_SYSTEM_ENVIRONMENT_NAME) IN ( SELECT Upper(SYSTEM_ENVIRONMENT_NAME) FROM metadata)OPEN @sp_crsr FETCH NEXT FROM @sp_crsr INTO @sys, @env, @tbl, @col, @xpath WHILE @@FETCH_STATUS = 0 BEGIN INSERT INTO #mid_tbl VALUES ( @sys, @env, @tbl, @col, @xpath, @tbl, @col ); IF (LEFT(@xpath, 1) = '$') BEGIN SET @delimiter = '.'; END; IF NOT EXISTS ( SELECT * FROM SYS_CON_ENVIRONMENTS WHERE SYSTEM_NAME = @sys AND SYSTEM_ENVIRONMENT_NAME = @env ) BEGIN INSERT INTO #result ( [sys], env, tbl, col, xpath, is_exist ) VALUES ( @sys, @env, @tbl, @col, @xpath, 0 ); END; IF @xpath <> '' BEGIN SET @s_crsr = CURSOR FOR SELECT VALUE FROM dbo.SPLIT(@delimiter, @xpath) OPEN @s_crsr FETCH NEXT FROM @s_crsr INTO @val; WHILE @@FETCH_STATUS = 0 BEGIN IF(@prev_value = NULL) SET @prev_value = @current_value; ELSE SET @prev_value = @current_value; SET @current_value = @val; IF(Charindex('@', @current_value) > 0) BEGIN SET @current_value = Substring(@current_value, 2, Len(@current_value)); END; INSERT INTO #mid_tbl VALUES ( @sys, @env, @tbl, @col, @xpath, @prev_value, @current_value ); FETCH NEXT FROM @s_crsr INTO @val; END; CLOSE @s_crsr ; DEALLOCATE @s_crsr; END; SET @prev_value = NULL; SET @current_value = NULL; SET @delimiter = '/'; FETCH NEXT FROM @sp_crsr INTO @sys, @env, @tbl, @col, @xpath END;CLOSE @sp_crsr ;DEALLOCATE @sp_crsr;INSERT INTO #result ( SYS, env, tbl, col, xpath, is_exist ) SELECT SYS , env, tbl, col, mt.xpath, CASE WHEN cte.TABLE_NAME IS NOT NULL AND cte.COLUMN_NAME IS NOT NULL THEN 1 ELSE 0 END IS_EXIST FROM ACTIVE_SYS_CON_ENVIRONMENTS SCE JOIN valid_sys_tbl_col_metadata cte ON cte.system_id = SCE.system_id RIGHT JOIN #mid_tbl mt ON Upper(mt.sys) = Upper(sce.system_name) COLLATE DATABASE_DEFAULT AND Upper(mt.env) = Upper(sce.system_environment_name) COLLATE DATABASE_DEFAULT AND Upper(mt.fromtbl) = Upper(cte.table_name) COLLATE DATABASE_DEFAULT AND Upper(mt.totable) = Upper(cte.column_name) COLLATE DATABASE_DEFAULT WHERE mt.fromtbl <> '.' AND mt.totable <> '.' AND mt.fromtbl <> '$' AND mt.totable <> '$'SELECT SYS SYSTEM_NAME, env SYSTEM_ENV_NAME, tbl TABLE_NAME, col COLUMN_NAME, xpath XPATH, Min(IS_EXIST) IS_EXIST FROM #result GROUP BY SYS, env, tbl, col, xpath;
com.erwin.lineage.sync.metadata.table = SET nocount ON;IF Object_id('tempdb..#mid_tbl') IS NOT NULL DROP TABLE #mid_tbl;IF Object_id('tempdb..#result') IS NOT NULL DROP TABLE #result;DECLARE @sp_crsr CURSOR;CREATE TABLE #result ( SYS NVARCHAR(MAX), env NVARCHAR(MAX), tbl NVARCHAR(MAX), col NVARCHAR(MAX), xpath NVARCHAR(MAX), is_exist INT );CREATE TABLE #mid_tbl ( SYS NVARCHAR(MAX), env NVARCHAR(MAX), tbl NVARCHAR(MAX), col NVARCHAR(MAX), xpath NVARCHAR(MAX), fromtbl NVARCHAR(MAX), totable NVARCHAR(MAX) );DECLARE @sys NVARCHAR(MAX);DECLARE @env NVARCHAR(MAX);DECLARE @tbl NVARCHAR(MAX);DECLARE @col NVARCHAR(MAX);DECLARE @xpath NVARCHAR(MAX);DECLARE @s_crsr CURSOR;DECLARE @val NVARCHAR(MAX);DECLARE @prev_value NVARCHAR(MAX);DECLARE @current_value NVARCHAR(MAX);DECLARE @delimiter NVARCHAR(MAX) = '/';SET @sp_crsr = CURSOR FOR WITH metadata AS ( SELECT SD.SYSTEM_NAME, SCE.SYSTEM_ENVIRONMENT_NAME, STM.TABLE_NAME FROM SYSTEM_DEFINITION_DETAILS SD JOIN ACTIVE_SYS_CON_ENVIRONMENTS SCE ON SD.SYSTEM_ID = SCE.SYSTEM_ID JOIN SYSTEM_TABLE_METADATA STM ON SCE.SCE_ID = STM.SCE_ID WHERE STM.STM_ID IN ( SELECT value FROM dbo.Split( N',', ?)) AND VALID = ? )SELECT SRC_SYSTEM_NAME , src_system_environment_name, SRC_ENTITY_UID, src_column_name, src_xpath FROM APPENDED_MAP_SPEC_RECORDS (NOLOCK) WHERE Upper(SRC_SYSTEM_NAME) IN ( SELECT Upper(SYSTEM_NAME) FROM metadata) AND Upper(SRC_SYSTEM_ENVIRONMENT_NAME) IN ( SELECT Upper(SYSTEM_ENVIRONMENT_NAME) FROM metadata) AND Upper(SRC_ENTITY_UID) IN ( SELECT Upper(TABLE_NAME) FROM metadata) UNION SELECT tgt_SYSTEM_NAME, tgt_system_environment_name, TGT_ENTITY_UID, tgt_column_name, tgt_xpath FROM APPENDED_MAP_SPEC_RECORDS (NOLOCK) WHERE Upper(TGT_SYSTEM_NAME) IN ( SELECT Upper(SYSTEM_NAME) FROM metadata) AND Upper(TGT_SYSTEM_ENVIRONMENT_NAME) IN ( SELECT Upper(SYSTEM_ENVIRONMENT_NAME) FROM metadata) AND Upper(TGT_ENTITY_UID) IN ( SELECT Upper(TABLE_NAME) FROM metadata)OPEN @sp_crsr FETCH NEXT FROM @sp_crsr INTO @sys, @env, @tbl, @col, @xpath WHILE @@FETCH_STATUS = 0 BEGIN INSERT INTO #mid_tbl VALUES ( @sys, @env, @tbl, @col, @xpath, @tbl, @col ); IF (LEFT(@xpath, 1) = '$') BEGIN SET @delimiter = '.'; END; IF NOT EXISTS ( SELECT * FROM SYS_CON_ENVIRONMENTS WHERE SYSTEM_NAME = @sys AND SYSTEM_ENVIRONMENT_NAME = @env ) BEGIN INSERT INTO #result ( [sys], env, tbl, col, xpath, is_exist ) VALUES ( @sys, @env, @tbl, @col, @xpath, 0 ); END; IF @xpath <> '' BEGIN SET @s_crsr = CURSOR FOR SELECT VALUE FROM dbo.SPLIT(@delimiter, @xpath) OPEN @s_crsr FETCH NEXT FROM @s_crsr INTO @val; WHILE @@FETCH_STATUS = 0 BEGIN IF(@prev_value = NULL) SET @prev_value = @current_value; ELSE SET @prev_value = @current_value; SET @current_value = @val; IF(Charindex('@', @current_value) > 0) BEGIN SET @current_value = Substring(@current_value, 2, Len(@current_value)); END; INSERT INTO #mid_tbl VALUES ( @sys, @env, @tbl, @col, @xpath, @prev_value, @current_value ); FETCH NEXT FROM @s_crsr INTO @val; END; CLOSE @s_crsr ; DEALLOCATE @s_crsr; END; SET @prev_value = NULL; SET @current_value = NULL; SET @delimiter = '/'; FETCH NEXT FROM @sp_crsr INTO @sys, @env, @tbl, @col, @xpath END;CLOSE @sp_crsr ;DEALLOCATE @sp_crsr;INSERT INTO #result ( SYS, env, tbl, col, xpath, is_exist ) SELECT SYS , env, tbl, col, mt.xpath, CASE WHEN cte.TABLE_NAME IS NOT NULL AND cte.COLUMN_NAME IS NOT NULL THEN 1 ELSE 0 END IS_EXIST FROM ACTIVE_SYS_CON_ENVIRONMENTS SCE JOIN valid_sys_tbl_col_metadata cte ON cte.system_id = SCE.system_id RIGHT JOIN #mid_tbl mt ON Upper(mt.sys) = Upper(sce.system_name) COLLATE DATABASE_DEFAULT AND Upper(mt.env) = Upper(sce.system_environment_name) COLLATE DATABASE_DEFAULT AND Upper(mt.fromtbl) = Upper(cte.table_name) COLLATE DATABASE_DEFAULT AND Upper(mt.totable) = Upper(cte.column_name) COLLATE DATABASE_DEFAULT WHERE mt.fromtbl <> '.' AND mt.totable <> '.' AND mt.fromtbl <> '$' AND mt.totable <> '$'SELECT SYS SYSTEM_NAME, env SYSTEM_ENV_NAME, tbl TABLE_NAME, col COLUMN_NAME, xpath XPATH, Min(IS_EXIST) IS_EXIST FROM #result GROUP BY SYS, env, tbl, col, xpath;
com.erwin.lineage.sync.metadata.column = SET nocount ON;IF Object_id('tempdb..#mid_tbl') IS NOT NULL DROP TABLE #mid_tbl;IF Object_id('tempdb..#result') IS NOT NULL DROP TABLE #result;DECLARE @sp_crsr CURSOR;CREATE TABLE #result ( SYS NVARCHAR(MAX), env NVARCHAR(MAX), tbl NVARCHAR(MAX), col NVARCHAR(MAX), xpath NVARCHAR(MAX), is_exist INT );CREATE TABLE #mid_tbl ( SYS NVARCHAR(MAX), env NVARCHAR(MAX), tbl NVARCHAR(MAX), col NVARCHAR(MAX), xpath NVARCHAR(MAX), fromtbl NVARCHAR(MAX), totable NVARCHAR(MAX) );DECLARE @sys NVARCHAR(MAX);DECLARE @env NVARCHAR(MAX);DECLARE @tbl NVARCHAR(MAX);DECLARE @col NVARCHAR(MAX);DECLARE @xpath NVARCHAR(MAX);DECLARE @s_crsr CURSOR;DECLARE @val NVARCHAR(MAX);DECLARE @prev_value NVARCHAR(MAX);DECLARE @current_value NVARCHAR(MAX);DECLARE @delimiter NVARCHAR(MAX) = '/';SET @sp_crsr = CURSOR FOR WITH metadata AS ( SELECT SD.SYSTEM_NAME, SCE.SYSTEM_ENVIRONMENT_NAME, STCM.TABLE_NAME, STCM.COLUMN_NAME FROM SYSTEM_DEFINITION_DETAILS SD JOIN ACTIVE_SYS_CON_ENVIRONMENTS SCE ON SD.SYSTEM_ID = SCE.SYSTEM_ID JOIN SYSTEM_TABLE_COLUMNS_METADATA STCM ON SCE.SCE_ID = STCM.SCE_ID WHERE STCM.STCM_ID IN ( SELECT value FROM dbo.Split( N',', ?)) AND VALID = ? )SELECT SRC_SYSTEM_NAME , src_system_environment_name, SRC_ENTITY_UID, src_column_name, src_xpath FROM APPENDED_MAP_SPEC_RECORDS (NOLOCK) WHERE Upper(SRC_SYSTEM_NAME) IN ( SELECT Upper(SYSTEM_NAME) FROM metadata) AND Upper(SRC_SYSTEM_ENVIRONMENT_NAME) IN ( SELECT Upper(SYSTEM_ENVIRONMENT_NAME) FROM metadata) AND Upper(SRC_ENTITY_UID) IN ( SELECT Upper(TABLE_NAME) FROM metadata) AND Upper(SRC_COLUMN_NAME) IN ( SELECT Upper(COLUMN_NAME) FROM metadata) UNION SELECT tgt_SYSTEM_NAME, tgt_system_environment_name, TGT_ENTITY_UID, tgt_column_name, tgt_xpath FROM APPENDED_MAP_SPEC_RECORDS (NOLOCK) WHERE Upper(TGT_SYSTEM_NAME) IN ( SELECT Upper(SYSTEM_NAME) FROM metadata) AND Upper(TGT_SYSTEM_ENVIRONMENT_NAME) IN ( SELECT Upper(SYSTEM_ENVIRONMENT_NAME) FROM metadata) AND Upper(TGT_ENTITY_UID) IN ( SELECT Upper(TABLE_NAME) FROM metadata) AND Upper(TGT_COLUMN_NAME) IN ( SELECT Upper(COLUMN_NAME) FROM metadata)OPEN @sp_crsr FETCH NEXT FROM @sp_crsr INTO @sys, @env, @tbl, @col, @xpath WHILE @@FETCH_STATUS = 0 BEGIN INSERT INTO #mid_tbl VALUES ( @sys, @env, @tbl, @col, @xpath, @tbl, @col ); IF (LEFT(@xpath, 1) = '$') BEGIN SET @delimiter = '.'; END; IF NOT EXISTS ( SELECT * FROM SYS_CON_ENVIRONMENTS WHERE SYSTEM_NAME = @sys AND SYSTEM_ENVIRONMENT_NAME = @env ) BEGIN INSERT INTO #result ( [sys], env, tbl, col, xpath, is_exist ) VALUES ( @sys, @env, @tbl, @col, @xpath, 0 ); END; IF @xpath <> '' BEGIN SET @s_crsr = CURSOR FOR SELECT VALUE FROM dbo.SPLIT(@delimiter, @xpath) OPEN @s_crsr FETCH NEXT FROM @s_crsr INTO @val; WHILE @@FETCH_STATUS = 0 BEGIN IF(@prev_value = NULL) SET @prev_value = @current_value; ELSE SET @prev_value = @current_value; SET @current_value = @val; IF(Charindex('@', @current_value) > 0) BEGIN SET @current_value = Substring(@current_value, 2, Len(@current_value)); END; INSERT INTO #mid_tbl VALUES ( @sys, @env, @tbl, @col, @xpath, @prev_value, @current_value ); FETCH NEXT FROM @s_crsr INTO @val; END; CLOSE @s_crsr ; DEALLOCATE @s_crsr; END; SET @prev_value = NULL; SET @current_value = NULL; SET @delimiter = '/'; FETCH NEXT FROM @sp_crsr INTO @sys, @env, @tbl, @col, @xpath END;CLOSE @sp_crsr ;DEALLOCATE @sp_crsr;INSERT INTO #result ( SYS, env, tbl, col, xpath, is_exist ) SELECT SYS , env, tbl, col, mt.xpath, CASE WHEN cte.TABLE_NAME IS NOT NULL AND cte.COLUMN_NAME IS NOT NULL THEN 1 ELSE 0 END IS_EXIST FROM ACTIVE_SYS_CON_ENVIRONMENTS SCE JOIN valid_sys_tbl_col_metadata cte ON cte.system_id = SCE.system_id RIGHT JOIN #mid_tbl mt ON Upper(mt.sys) = Upper(sce.system_name) COLLATE DATABASE_DEFAULT AND Upper(mt.env) = Upper(sce.system_environment_name) COLLATE DATABASE_DEFAULT AND Upper(mt.fromtbl) = Upper(cte.table_name) COLLATE DATABASE_DEFAULT AND Upper(mt.totable) = Upper(cte.column_name) COLLATE DATABASE_DEFAULT WHERE mt.fromtbl <> '.' AND mt.totable <> '.' AND mt.fromtbl <> '$' AND mt.totable <> '$'SELECT SYS SYSTEM_NAME, env SYSTEM_ENV_NAME, tbl TABLE_NAME, col COLUMN_NAME, xpath XPATH, Min(IS_EXIST) IS_EXIST FROM #result GROUP BY SYS, env, tbl, col, xpath;